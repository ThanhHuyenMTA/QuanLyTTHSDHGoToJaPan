//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyHocSinhDuHoc.Models.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbXulyTThsEntities : DbContext
    {
        public dbXulyTThsEntities()
            : base("name=dbXulyTThsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BANGTOTNGHIEP> BANGTOTNGHIEPs { get; set; }
        public virtual DbSet<BAOCAOTHONGKE> BAOCAOTHONGKEs { get; set; }
        public virtual DbSet<CT_BCTK> CT_BCTK { get; set; }
        public virtual DbSet<CT_LOTRINH> CT_LOTRINH { get; set; }
        public virtual DbSet<GIAYCHUNGTHUC> GIAYCHUNGTHUCs { get; set; }
        public virtual DbSet<GIAYKHAISINH> GIAYKHAISINHs { get; set; }
        public virtual DbSet<HOCBA> HOCBAs { get; set; }
        public virtual DbSet<HOPDONG> HOPDONGs { get; set; }
        public virtual DbSet<HOSOH> HOSOHS { get; set; }
        public virtual DbSet<KIHOC> KIHOCs { get; set; }
        public virtual DbSet<LOTRINH> LOTRINHs { get; set; }
        public virtual DbSet<TABLE_LOI> TABLE_LOI { get; set; }
        public virtual DbSet<HoKhau> HoKhaus { get; set; }
        public virtual DbSet<GiayNhapHoc> GiayNhapHocs { get; set; }
        public virtual DbSet<PHANQUYEN> PHANQUYENs { get; set; }
        public virtual DbSet<QUYEN> QUYENs { get; set; }
        public virtual DbSet<QUYENTRUYCAP> QUYENTRUYCAPs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<NGUOIGIAMHO> NGUOIGIAMHOes { get; set; }
        public virtual DbSet<CMT> CMTs { get; set; }
        public virtual DbSet<HOCSINH> HOCSINHs { get; set; }
        public virtual DbSet<NAMHOC> NAMHOCs { get; set; }
    
        public virtual ObjectResult<PhanTrang_Result> PhanTrang(Nullable<int> nguoiTao, Nullable<int> lineStart, Nullable<int> soBanGhi)
        {
            var nguoiTaoParameter = nguoiTao.HasValue ?
                new ObjectParameter("NguoiTao", nguoiTao) :
                new ObjectParameter("NguoiTao", typeof(int));
    
            var lineStartParameter = lineStart.HasValue ?
                new ObjectParameter("LineStart", lineStart) :
                new ObjectParameter("LineStart", typeof(int));
    
            var soBanGhiParameter = soBanGhi.HasValue ?
                new ObjectParameter("soBanGhi", soBanGhi) :
                new ObjectParameter("soBanGhi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PhanTrang_Result>("PhanTrang", nguoiTaoParameter, lineStartParameter, soBanGhiParameter);
        }
    
        public virtual ObjectResult<PhanTrangLoi_Result> PhanTrangLoi(Nullable<int> lineStart, Nullable<int> soBanGhi, Nullable<int> nguoiSua)
        {
            var lineStartParameter = lineStart.HasValue ?
                new ObjectParameter("LineStart", lineStart) :
                new ObjectParameter("LineStart", typeof(int));
    
            var soBanGhiParameter = soBanGhi.HasValue ?
                new ObjectParameter("soBanGhi", soBanGhi) :
                new ObjectParameter("soBanGhi", typeof(int));
    
            var nguoiSuaParameter = nguoiSua.HasValue ?
                new ObjectParameter("NguoiSua", nguoiSua) :
                new ObjectParameter("NguoiSua", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PhanTrangLoi_Result>("PhanTrangLoi", lineStartParameter, soBanGhiParameter, nguoiSuaParameter);
        }
    
        public virtual ObjectResult<PhanTrangNguoiDung_Result> PhanTrangNguoiDung(Nullable<int> lineStart, Nullable<int> soBanGhi)
        {
            var lineStartParameter = lineStart.HasValue ?
                new ObjectParameter("LineStart", lineStart) :
                new ObjectParameter("LineStart", typeof(int));
    
            var soBanGhiParameter = soBanGhi.HasValue ?
                new ObjectParameter("soBanGhi", soBanGhi) :
                new ObjectParameter("soBanGhi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PhanTrangNguoiDung_Result>("PhanTrangNguoiDung", lineStartParameter, soBanGhiParameter);
        }
    }
}
